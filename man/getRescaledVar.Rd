% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getRescaledVar.R
\name{getRescaledVar}
\alias{getRescaledVar}
\title{Rescale Variable to New Range}
\usage{
getRescaledVar(x, min = NULL, max = NULL, new.max = 10, log.transform = FALSE)
}
\arguments{
\item{x}{A numeric vector to be rescaled.}

\item{min}{Optional minimum value for rescaling. If NULL, uses the minimum of x.
Values below this threshold will be capped at this minimum.}

\item{max}{Optional maximum value for rescaling. If NULL, uses the maximum of x.
Values above this threshold will be capped at this maximum.}

\item{new.max}{The maximum value of the rescaled range (default: 10).
The rescaled values will range from 0 to new.max.}

\item{log.transform}{Logical indicating whether to apply log transformation
before rescaling (default: FALSE). Uses log(x + 1) to handle zero values.}
}
\value{
A numeric vector of rescaled values ranging from 0 to new.max.
}
\description{
This function rescales a numeric variable to a new range, with optional log transformation
and custom minimum/maximum bounds. Values are linearly transformed to fit within the
specified range (0 to new.max).
}
\examples{
# Basic rescaling
x <- c(1, 5, 10, 15, 20)
getRescaledVar(x)

# Rescaling with custom range
getRescaledVar(x, new.max = 100)

# Rescaling with custom min/max bounds
getRescaledVar(x, min = 5, max = 15)

# Log transformation before rescaling
x.skewed <- c(1, 10, 100, 1000)
getRescaledVar(x.skewed, log.transform = TRUE)

# Handling data with outliers
x.outliers <- c(1, 2, 3, 4, 100)
getRescaledVar(x.outliers, max = 10)  # Cap outlier at 10
}
